<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
      http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/util
      http://www.springframework.org/schema/util/spring-util.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- spring embedded database, url "jdbc:h2:mem:testdb", no log settings
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:sql/schema.sql"/>
        <jdbc:script location="classpath:sql/test-data.sql"/>
    </jdbc:embedded-database>
    -->

    <!--
        p:url="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1"
            "mem:testdb", in-memory database named as "testdb"
            "DB_CLOSE_DELAY=-1", keep in-memory database content as long as JVM is alive

        log settings
            append ";TRACE_LEVEL_FILE=3;TRACE_LEVEL_SYSTEM_OUT=3"
                log H2 to stdout, level 0..3={OFF, ERROR, INFO, DEBUG}

            append "TRACE_LEVEL_FILE=4"
                log H2 with slf4j or log4j settings (log level and output file)
    -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="org.h2.Driver"
          p:url="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4"
          p:username="sa"
          p:password=""/>

    <!-- initialize database with schema and data -->
    <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:sql/schema.sql"/>
        <jdbc:script location="classpath:sql/test-data.sql"/>
    </jdbc:initialize-database>

    <!-- launch H2 web server
         open http://localhost:11111 in web browser
         connect to database "jdbc:h2:mem:testdb" (defined in bean "dataSource")
    -->
    <bean id="org.h2.tools.Server-WebServer" class="org.h2.tools.Server"
          factory-method="createWebServer" depends-on="dataSource"
          init-method="start" lazy-init="false">
        <constructor-arg value="-web,-webPort,11111"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"/>

    <tx:annotation-driven/>

    <context:component-scan base-package="com.frankwu.hellodb"/>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:packagesToScan="com.frankwu.hellodb"
          p:hibernateProperties-ref="hibernateProperties"/>

    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        <prop key="hibernate.max_fetch_depth">3</prop>
        <prop key="hibernate.jdbc.fetch_size">50</prop>
        <prop key="hibernate.jdbc.batch_size">10</prop>
        <prop key="hibernate.show_sql">true</prop>
    </util:properties>

</beans>
